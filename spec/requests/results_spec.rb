require 'rails_helper'

RSpec.describe "Results", type: :request do
  describe "GET /index" do
    it "should render #index template" do
      get '/results'
      expect(response).to render_template(:index)
    end

    it "should return repos from all languages" do
      language = Language.create(name: 'python')
      repository = { "id"=>54346799, "node_id"=>"MDEwOlJlcG9zaXRvcnk1NDM0Njc5OQ==", "name"=>"public-apis", "full_name"=>"public-apis/public-apis", "private"=>false, "owner"=>{"login"=>"public-apis", "id"=>51121562, "node_id"=>"MDEyOk9yZ2FuaXphdGlvbjUxMTIxNTYy", "avatar_url"=>"https://avatars.githubusercontent.com/u/51121562?v=4", "gravatar_id"=>"", "url"=>"https://api.github.com/users/public-apis", "html_url"=>"https://github.com/public-apis", "followers_url"=>"https://api.github.com/users/public-apis/followers", "following_url"=>"https://api.github.com/users/public-apis/following{/other_user}", "gists_url"=>"https://api.github.com/users/public-apis/gists{/gist_id}", "starred_url"=>"https://api.github.com/users/public-apis/starred{/owner}{/repo}", "subscriptions_url"=>"https://api.github.com/users/public-apis/subscriptions", "organizations_url"=>"https://api.github.com/users/public-apis/orgs", "repos_url"=>"https://api.github.com/users/public-apis/repos", "events_url"=>"https://api.github.com/users/public-apis/events{/privacy}", "received_events_url"=>"https://api.github.com/users/public-apis/received_events", "type"=>"Organization", "site_admin"=>false}, "html_url"=>"https://github.com/public-apis/public-apis", "description"=>"A collective list of free APIs", "fork"=>false, "url"=>"https://api.github.com/repos/public-apis/public-apis", "forks_url"=>"https://api.github.com/repos/public-apis/public-apis/forks", "keys_url"=>"https://api.github.com/repos/public-apis/public-apis/keys{/key_id}", "collaborators_url"=>"https://api.github.com/repos/public-apis/public-apis/collaborators{/collaborator}", "teams_url"=>"https://api.github.com/repos/public-apis/public-apis/teams", "hooks_url"=>"https://api.github.com/repos/public-apis/public-apis/hooks", "issue_events_url"=>"https://api.github.com/repos/public-apis/public-apis/issues/events{/number}", "events_url"=>"https://api.github.com/repos/public-apis/public-apis/events", "assignees_url"=>"https://api.github.com/repos/public-apis/public-apis/assignees{/user}", "branches_url"=>"https://api.github.com/repos/public-apis/public-apis/branches{/branch}", "tags_url"=>"https://api.github.com/repos/public-apis/public-apis/tags", "blobs_url"=>"https://api.github.com/repos/public-apis/public-apis/git/blobs{/sha}", "git_tags_url"=>"https://api.github.com/repos/public-apis/public-apis/git/tags{/sha}", "git_refs_url"=>"https://api.github.com/repos/public-apis/public-apis/git/refs{/sha}", "trees_url"=>"https://api.github.com/repos/public-apis/public-apis/git/trees{/sha}", "statuses_url"=>"https://api.github.com/repos/public-apis/public-apis/statuses/{sha}", "languages_url"=>"https://api.github.com/repos/public-apis/public-apis/languages", "stargazers_url"=>"https://api.github.com/repos/public-apis/public-apis/stargazers", "contributors_url"=>"https://api.github.com/repos/public-apis/public-apis/contributors", "subscribers_url"=>"https://api.github.com/repos/public-apis/public-apis/subscribers", "subscription_url"=>"https://api.github.com/repos/public-apis/public-apis/subscription", "commits_url"=>"https://api.github.com/repos/public-apis/public-apis/commits{/sha}", "git_commits_url"=>"https://api.github.com/repos/public-apis/public-apis/git/commits{/sha}", "comments_url"=>"https://api.github.com/repos/public-apis/public-apis/comments{/number}", "issue_comment_url"=>"https://api.github.com/repos/public-apis/public-apis/issues/comments{/number}", "contents_url"=>"https://api.github.com/repos/public-apis/public-apis/contents/{+path}", "compare_url"=>"https://api.github.com/repos/public-apis/public-apis/compare/{base}...{head}", "merges_url"=>"https://api.github.com/repos/public-apis/public-apis/merges", "archive_url"=>"https://api.github.com/repos/public-apis/public-apis/{archive_format}{/ref}", "downloads_url"=>"https://api.github.com/repos/public-apis/public-apis/downloads", "issues_url"=>"https://api.github.com/repos/public-apis/public-apis/issues{/number}", "pulls_url"=>"https://api.github.com/repos/public-apis/public-apis/pulls{/number}", "milestones_url"=>"https://api.github.com/repos/public-apis/public-apis/milestones{/number}", "notifications_url"=>"https://api.github.com/repos/public-apis/public-apis/notifications{?since,all,participating}", "labels_url"=>"https://api.github.com/repos/public-apis/public-apis/labels{/name}", "releases_url"=>"https://api.github.com/repos/public-apis/public-apis/releases{/id}", "deployments_url"=>"https://api.github.com/repos/public-apis/public-apis/deployments", "created_at"=>"2016-03-20T23:49:42Z", "updated_at"=>"2023-01-14T23:33:01Z", "pushed_at"=>"2023-01-14T19:13:05Z", "git_url"=>"git://github.com/public-apis/public-apis.git", "ssh_url"=>"git@github.com:public-apis/public-apis.git", "clone_url"=>"https://github.com/public-apis/public-apis.git", "svn_url"=>"https://github.com/public-apis/public-apis", "homepage"=>"http://public-apis.org", "size"=>4948, "stargazers_count"=>224650, "watchers_count"=>224650, "language"=>"Python", "has_issues"=>true, "has_projects"=>false, "has_downloads"=>true, "has_wiki"=>false, "has_pages"=>false, "has_discussions"=>false, "forks_count"=>25593, "mirror_url"=>nil, "archived"=>false, "disabled"=>false, "open_issues_count"=>124, "license"=>{"key"=>"mit", "name"=>"MIT License", "spdx_id"=>"MIT", "url"=>"https://api.github.com/licenses/mit", "node_id"=>"MDc6TGljZW5zZTEz"}, "allow_forking"=>true, "is_template"=>false, "web_commit_signoff_required"=>false, "topics"=>["api", "apis", "dataset", "development", "free", "list", "lists", "open-source", "public", "public-api", "public-apis", "resources", "software"], "visibility"=>"public", "forks"=>25593, "open_issues"=>124, "watchers"=>224650, "default_branch"=>"master", "score"=>1.0 }
      allow(GithubApiModel).to receive(:retrieve_language_repo).with('python').and_return(repository)

      get '/results'
      expect(assigns(:results)).to eq([Repository.find_by(github_id: repository['id'])])
    end
  end
end

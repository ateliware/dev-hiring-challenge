##########################################################
#
# flask_test.cfg is intended to be used for testing a Flask application
#
##########################################################
import os


# Get the folder of the top-level directory of this project
BASEDIR = os.path.abspath(os.path.dirname(__file__))

# Update later by using a random number generator and moving
# the actual key outside of the source code under version control
SECRET_KEY = 'cd48e1c22de0961d5d1bfb14f8a66e006cfb1cfbf3f0c0f3'
DEBUG = True

# DB CONNECTION
DATABASE = {
    'engine': 'postgresql',
    'user': 'postgres',
    'pw': 'QWERTY',
    'db': 'postgres',
    'host': 'localhost',  #postgresdb on docker
    'port': '5432',
}

# Get database url from environment variables on Heroku else Docker
database_url = os.environ.get('DATABASE_URL', '%(engine)s://%(user)s:%(pw)s@%(host)s:%(port)s/%(db)s' % DATABASE)
if database_url and database_url.startswith("postgres://"):
    database_url = database_url.replace("postgres://", "postgresql://", 1)
# rest of connection code using the connection string `database_url`

# SQLAlchemy
SQLALCHEMY_DATABASE_URI = database_url
SQLALCHEMY_TRACK_MODIFICATIONS = False

# Enable the TESTING flag to disable the error catching during request handling
# so that you get better error reports when performing test requests against the application.
TESTING = True

# Disable CSRF tokens in the Forms (only valid for testing purposes!)
WTF_CSRF_ENABLED = False

name: Elixir CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: [23]
        elixir: [1.11.2]
    
    services:
      db:
        image: postgis/postgis:12-3.0
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
        otp-version: ${{ matrix.otp }} # Define the OTP version [required]
    
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 13.8.0
    
    - uses: actions/cache@v1
      id: deps-cache
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      
    - uses: actions/cache@v1
      id: build-cache
      with:
        path: _build
        key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-npm-cache-
          
    - name: Install deps
      run: |
        mix deps.get
        (cd ./assets && npm install)
    - name: Build and test
      env:
        MIX_ENV: test
      run: |
        while read -r env; do export "$env"; done < ./environments
        mix local.hex --force && mix local.rebar --force
        mix setup
        mix test

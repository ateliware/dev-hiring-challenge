@using AteliwareGitHub.Shared
@page "/fetchLangs"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper uriHelper
@inject IJSRuntime JsRuntime;

<h1>Languages</h1>

<DevelopmentStuff Title="We will be here filtering following languages..." ShowSpecs="false" />

@if (languages == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <select id="languages" onchange=@LangSelectionChanged>
        <option value="0">Pick a Language</option>
        @foreach (var lang in languages)
        {
            <option value="@lang.name">@lang.name</option>
        }
    </select>


    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var lang in langsSelected)
            {
                <tr>
                    <td>@lang.name</td>
                </tr>
            }
        </tbody>
    </table>
}

<button class="btn btn-primary" onclick="@GoForResults">Results</button>

<button class="btn btn-primary" onclick="@ClearResults">Clear</button>

@functions {
    LanguagesDTO[] languages;
    List<LanguagesDTO> langsSelected = new List<LanguagesDTO>();
    int qtdLangs = 0;
    List<string> langsuri = new List<string>();

    protected override async Task OnInitAsync()
    {
        languages = await Http.GetJsonAsync<LanguagesDTO[]>("api/GitHub/Languages");
        langsuri.Clear();
        langsSelected.Clear();
    }

    void LangSelectionChanged(UIChangeEventArgs e)
    {
        if (qtdLangs < 5)
        {
            var alreadypicked = from b in langsSelected
                                where b.name == e.Value.ToString()
                                select b;

            if (alreadypicked.Count() <= 0)
            {
                langsSelected.Add(new LanguagesDTO() { name = e.Value.ToString(), qtd = 0 });

                langsuri.Add("lang=" + e.Value.ToString());

                qtdLangs++;
            }
        }
    }

    void ClearResults()
    {
        langsSelected.Clear();
        qtdLangs = 0;
        langsuri.Clear();
    }

    async void GoForResults()
    {
        if (langsuri.Count() > 0)
        {
            string url = $"/fetchData/{string.Join("&", langsuri)}";

            uriHelper.NavigateTo(url);
        }
        else
        {
            await JsRuntime.InvokeAsync<bool>("utilJSFunctions.showMessage", "Select one language at least to proceed.");
        }
    }
}
#pragma checksum "/Users/cleversongallego/Projects/Ateliware/AteliwareGitHub.Client/Pages/FetchData.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3273363e064c4a2e601a4f2ca6085395b28587b2"
// <auto-generated/>
#pragma warning disable 1591
namespace AteliwareGitHub.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using AteliwareGitHub.Client;
    using AteliwareGitHub.Client.Shared;
    using AteliwareGitHub.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/fetchdata")]
    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/fetchdata/{langs}")]
    public class FetchData : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.AddMarkupContent(0, "<h1>Github Repositories</h1>\n\n");
            builder.OpenComponent<AteliwareGitHub.Client.Shared.DevelopmentStuff>(1);
            builder.AddAttribute(2, "Title", "Listing repositories most fancy (stars)");
            builder.AddAttribute(3, "showSpecs", Microsoft.AspNetCore.Blazor.Components.RuntimeHelpers.TypeCheck<System.Boolean>(false));
            builder.CloseComponent();
            builder.AddContent(4, "\n\n");
#line 11 "/Users/cleversongallego/Projects/Ateliware/AteliwareGitHub.Client/Pages/FetchData.cshtml"
 if (repos == null)
{

#line default
#line hidden
            builder.AddContent(5, "    ");
            builder.AddMarkupContent(6, "<p><em>Loading...</em></p>\n");
#line 14 "/Users/cleversongallego/Projects/Ateliware/AteliwareGitHub.Client/Pages/FetchData.cshtml"
}
else
{

#line default
#line hidden
            builder.AddContent(7, "    ");
            builder.OpenElement(8, "table");
            builder.AddAttribute(9, "class", "table");
            builder.AddContent(10, "\n        ");
            builder.AddMarkupContent(11, "<thead>\n            <tr>\n                <th>Name</th>\n                <th>Stars Count</th>\n                <th>Details</th>\n            </tr>\n        </thead>\n        ");
            builder.OpenElement(12, "tbody");
            builder.AddContent(13, "\n");
#line 26 "/Users/cleversongallego/Projects/Ateliware/AteliwareGitHub.Client/Pages/FetchData.cshtml"
             foreach (var repo in repos)
            {
                

#line default
#line hidden
#line 28 "/Users/cleversongallego/Projects/Ateliware/AteliwareGitHub.Client/Pages/FetchData.cshtml"
                 foreach (var item in repo.items)
                {

#line default
#line hidden
            builder.AddContent(14, "                    ");
            builder.OpenElement(15, "tr");
            builder.AddContent(16, "\n                        ");
            builder.OpenElement(17, "td");
            builder.AddContent(18, item.name);
            builder.CloseElement();
            builder.AddContent(19, "\n                        ");
            builder.OpenElement(20, "td");
            builder.AddContent(21, item.stargazers_count.ToString());
            builder.CloseElement();
            builder.AddContent(22, "\n                        ");
            builder.OpenElement(23, "td");
            builder.OpenElement(24, "button");
            builder.AddAttribute(25, "class", "btn green");
            builder.AddAttribute(26, "onclick", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(()=>showDetails(item.id)));
            builder.AddContent(27, "Show");
            builder.CloseElement();
            builder.CloseElement();
            builder.AddContent(28, "\n                    ");
            builder.CloseElement();
            builder.AddContent(29, "\n");
#line 35 "/Users/cleversongallego/Projects/Ateliware/AteliwareGitHub.Client/Pages/FetchData.cshtml"
                }

#line default
#line hidden
#line 35 "/Users/cleversongallego/Projects/Ateliware/AteliwareGitHub.Client/Pages/FetchData.cshtml"
                 
            }

#line default
#line hidden
            builder.AddContent(30, "        ");
            builder.CloseElement();
            builder.AddContent(31, "\n    ");
            builder.CloseElement();
            builder.AddContent(32, "\n");
#line 39 "/Users/cleversongallego/Projects/Ateliware/AteliwareGitHub.Client/Pages/FetchData.cshtml"
}

#line default
#line hidden
        }
        #pragma warning restore 1998
#line 41 "/Users/cleversongallego/Projects/Ateliware/AteliwareGitHub.Client/Pages/FetchData.cshtml"
            
    GitRepoDTO[] repos;
    Item repoUnit;


    [Parameter]
    private string langs { get; set; }

    protected override async Task OnInitAsync()
    {
        if (langs == null)
        {
            await JsRuntime.InvokeAsync<bool>("utilJSFunctions.showMessage", "At least one language should be selected to get the results.");
            return;
        }
        repos = await Http.GetJsonAsync<GitRepoDTO[]>($"api/GitHub/GitRepositories?{langs}");
    }

    private async Task showDetails(int id)
    {
        repoUnit = await Http.GetJsonAsync<Item>($"api/GitHub/RepositoryDetails?id={id}");
        await JsRuntime.InvokeAsync<bool>("utilJSFunctions.showRepoDetail", repoUnit);
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591

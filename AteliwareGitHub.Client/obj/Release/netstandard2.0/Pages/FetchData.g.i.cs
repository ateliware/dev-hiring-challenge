#pragma checksum "/Users/cleversongallego/Projects/DevHiring/dev-hiring-challenge/AteliwareGitHub.Client/Pages/FetchData.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3273363e064c4a2e601a4f2ca6085395b28587b2"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace AteliwareGitHub.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using AteliwareGitHub.Client;
    using AteliwareGitHub.Client.Shared;
    using AteliwareGitHub.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/fetchdata")]
    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/fetchdata/{langs}")]
    public class FetchData : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 41 "/Users/cleversongallego/Projects/DevHiring/dev-hiring-challenge/AteliwareGitHub.Client/Pages/FetchData.cshtml"
            
    GitRepoDTO[] repos;
    Item repoUnit;


    [Parameter]
    private string langs { get; set; }

    protected override async Task OnInitAsync()
    {
        if (langs == null)
        {
            await JsRuntime.InvokeAsync<bool>("utilJSFunctions.showMessage", "At least one language should be selected to get the results.");
            return;
        }
        repos = await Http.GetJsonAsync<GitRepoDTO[]>($"api/GitHub/GitRepositories?{langs}");
    }

    private async Task showDetails(int id)
    {
        repoUnit = await Http.GetJsonAsync<Item>($"api/GitHub/RepositoryDetails?id={id}");
        await JsRuntime.InvokeAsync<bool>("utilJSFunctions.showRepoDetail", repoUnit);
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591

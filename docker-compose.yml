version: "3"

services:
  client:
    image: ${CLIENT}
    container_name: client
    environment:
      - TZ=${TIMEZONE}
    ports:
      - "8080:8080:80"
    depends_on:
      - node-api
    networks:
      - production-network

  node-api:
    image: ${SERVER}
    container_name: server-api
    restart: always
    ports:
      - "3000"
    depends_on:
      - postgres_db
    environment:
      VIRTUAL_HOST: node.api.com
      POSTGRES_BASE: ${POSTGRES_BASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_URL: postgres_db
      NODE_ENV: ${NODE_ENV}
    networks:
      - production-network

  postgres_db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "Postgres2019!"
    ports:
      - "15432:5432"
    volumes:
      - ${POSTGRES_DATA_DIR}:/var/lib/postgresql/data
    networks:
      - production-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "ivanhweb@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "20401359"
    ports:
      - "16543:80"
    depends_on:
      - postgres_db
    networks:
      - production-network

networks:
  production-network:
    driver: bridge

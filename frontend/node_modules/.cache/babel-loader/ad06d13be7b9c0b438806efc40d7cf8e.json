{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"showArrow\", \"inputIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"suffix\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { getSeparatedContent } from './utils/valueUtil';\nimport SelectTrigger from './SelectTrigger';\nimport Selector from './Selector';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useDelayReset from './hooks/useDelayReset';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport { BaseSelectContext } from './hooks/useBaseProps';\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n}\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle, _classNames2;\n\n  var id = props.id,\n      prefixCls = props.prefixCls,\n      className = props.className,\n      showSearch = props.showSearch,\n      tagRender = props.tagRender,\n      direction = props.direction,\n      omitDomProps = props.omitDomProps,\n      displayValues = props.displayValues,\n      onDisplayValuesChange = props.onDisplayValuesChange,\n      emptyOptions = props.emptyOptions,\n      _props$notFoundConten = props.notFoundContent,\n      notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n      onClear = props.onClear,\n      mode = props.mode,\n      disabled = props.disabled,\n      loading = props.loading,\n      getInputElement = props.getInputElement,\n      getRawInputElement = props.getRawInputElement,\n      open = props.open,\n      defaultOpen = props.defaultOpen,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      activeValue = props.activeValue,\n      onActiveValueChange = props.onActiveValueChange,\n      activeDescendantId = props.activeDescendantId,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      onSearchSplit = props.onSearchSplit,\n      tokenSeparators = props.tokenSeparators,\n      allowClear = props.allowClear,\n      showArrow = props.showArrow,\n      inputIcon = props.inputIcon,\n      clearIcon = props.clearIcon,\n      OptionList = props.OptionList,\n      animation = props.animation,\n      transitionName = props.transitionName,\n      dropdownStyle = props.dropdownStyle,\n      dropdownClassName = props.dropdownClassName,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      dropdownRender = props.dropdownRender,\n      dropdownAlign = props.dropdownAlign,\n      placement = props.placement,\n      getPopupContainer = props.getPopupContainer,\n      _props$showAction = props.showAction,\n      showAction = _props$showAction === void 0 ? [] : _props$showAction,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onKeyUp = props.onKeyUp,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      suffix = props.suffix,\n      restProps = _objectWithoutProperties(props, _excluded); // ============================== MISC ==============================\n\n\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n\n  var domProps = _objectSpread({}, restProps);\n\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 ? void 0 : omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  }); // ============================= Mobile =============================\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mobile = _React$useState2[0],\n      setMobile = _React$useState2[1];\n\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []); // ============================== Refs ==============================\n\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n  /** Used for component focused management */\n\n  var _useDelayReset = useDelayReset(),\n      _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n      mockFocused = _useDelayReset2[0],\n      setMockFocused = _useDelayReset2[1],\n      cancelSetMockFocused = _useDelayReset2[2]; // =========================== Imperative ===========================\n\n\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      }\n    };\n  }); // ========================== Search Value ==========================\n\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]); // ========================== Custom Input ==========================\n  // Only works in `combobox`\n\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null; // Used for customize replacement for `rc-cascader`\n\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 ? void 0 : (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref); // ============================== Open ==============================\n\n  var _useMergedState = useMergedState(undefined, {\n    defaultValue: defaultOpen,\n    value: open\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerOpen = _useMergedState2[0],\n      setInnerOpen = _useMergedState2[1];\n\n  var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n  var emptyListContent = !notFoundContent && emptyOptions;\n\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n    if (mergedOpen !== nextOpen && !disabled) {\n      setInnerOpen(nextOpen);\n      onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextOpen);\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]); // ============================= Search =============================\n\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 ? void 0 : onActiveValueChange(null); // Check if match the `tokenSeparators`\n\n    var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators); // Ignore combobox since it's not split-able\n\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 ? void 0 : onSearchSplit(patchLabels); // Should close when paste finish\n\n      onToggleOpen(false); // Tell Selector that break next actions\n\n      ret = false;\n    }\n\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n\n    return ret;\n  }; // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  }; // Close will clean up single mode search text\n\n\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]); // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    }\n\n    if (disabled) {\n      setMockFocused(false);\n    }\n  }, [disabled]); // ============================ Keyboard ============================\n\n  /**\n   * We record input value here to check if can press to clean up by backspace\n   * - null: Key is not down, this is reset by key up\n   * - true: Search text is empty when first time backspace down\n   * - false: Search text is not empty when first time backspace down\n   */\n\n  var _useLock = useLock(),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getClearLock = _useLock2[0],\n      setClearLock = _useLock2[1]; // KeyDown\n\n\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var which = event.which;\n\n    if (which === KeyCode.ENTER) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      } // We only manage open state here, close logic should handle by list component\n\n\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n\n    setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n    if (which === KeyCode.BACKSPACE && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n\n      var removedDisplayValue = null;\n\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    if (mergedOpen && listRef.current) {\n      var _listRef$current2;\n\n      (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown.apply(void 0, [event].concat(rest));\n  }; // KeyUp\n\n\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n\n    if (mergedOpen && listRef.current) {\n      var _listRef$current3;\n\n      (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n\n    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp.apply(void 0, [event].concat(rest));\n  }; // ============================ Selector ============================\n\n\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  }; // ========================== Focus / Blur ==========================\n\n  /** Record real focus status */\n\n\n  var focusRef = React.useRef(false);\n\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      } // `showAction` should handle `focus` if set\n\n\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n\n    focusRef.current = true;\n  };\n\n  var onContainerBlur = function onContainerBlur() {\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      onToggleOpen(false);\n    });\n\n    if (disabled) {\n      return;\n    }\n\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  }; // Give focus back of Select\n\n\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n\n        cancelSetMockFocused();\n\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 ? void 0 : _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n\n    onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown.apply(void 0, [event].concat(restArgs));\n  }; // ============================ Dropdown ============================\n\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      containerWidth = _React$useState4[0],\n      setContainerWidth = _React$useState4[1];\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      forceUpdate = _React$useState6[1]; // We need force update here since popup dom is render async\n\n\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  }\n\n  useLayoutEffect(function () {\n    if (triggerOpen) {\n      var _containerRef$current;\n\n      var newWidth = Math.ceil((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.offsetWidth);\n\n      if (containerWidth !== newWidth && !Number.isNaN(newWidth)) {\n        setContainerWidth(newWidth);\n      }\n    }\n  }, [triggerOpen]); // Used for raw custom input trigger\n\n  var onTriggerVisibleChange;\n\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  } // Close when click on non-select element\n\n\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen); // ============================ Context =============================\n\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]); // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n  // ============================= Arrow ==============================\n\n  var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !multiple && mode !== 'combobox';\n  var arrowNode;\n\n  if (mergedShowArrow) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: inputIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  } // ============================= Clear ==============================\n\n\n  var clearNode;\n\n  var onClearMouseDown = function onClearMouseDown() {\n    onClear === null || onClear === void 0 ? void 0 : onClear();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n\n  if (!disabled && allowClear && (displayValues.length || mergedSearchValue)) {\n    clearNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: \"\".concat(prefixCls, \"-clear\"),\n      onMouseDown: onClearMouseDown,\n      customizeIcon: clearIcon\n    }, \"\\xD7\");\n  } // =========================== OptionList ===========================\n\n\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  }); // ============================= Select =============================\n\n  var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-has-suffix\"), suffix), _classNames2)); // >>> Selector\n\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    containerWidth: containerWidth,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode() {\n      return selectorDomRef.current;\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  }) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    showSearch: mergedShowSearch,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter\n  }))); // >>> Render\n\n  var renderNode; // Render raw\n\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(displayValues.map(function (_ref) {\n      var label = _ref.label,\n          value = _ref.value;\n      return ['number', 'string'].includes(_typeof(label)) ? label : value;\n    }).join(', '))), selectorNode, arrowNode, clearNode, suffix && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-suffix\")\n    }, suffix));\n  }\n\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n}); // Set display name for dev\n\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\n\nexport default BaseSelect;","map":{"version":3,"sources":["C:/Users/Nader Farhat/Dropbox/PC/Desktop/Estudo/dev-hiring-challenge/frontend/node_modules/rc-select/es/BaseSelect.js"],"names":["_typeof","_extends","_defineProperty","_toConsumableArray","_slicedToArray","_objectSpread","_objectWithoutProperties","_excluded","React","classNames","KeyCode","isMobile","useComposeRef","useMergedState","useLayoutEffect","getSeparatedContent","SelectTrigger","Selector","useSelectTriggerControl","useDelayReset","TransBtn","useLock","BaseSelectContext","DEFAULT_OMIT_PROPS","isMultiple","mode","BaseSelect","forwardRef","props","ref","_customizeRawInputEle","_classNames2","id","prefixCls","className","showSearch","tagRender","direction","omitDomProps","displayValues","onDisplayValuesChange","emptyOptions","_props$notFoundConten","notFoundContent","onClear","disabled","loading","getInputElement","getRawInputElement","open","defaultOpen","onDropdownVisibleChange","activeValue","onActiveValueChange","activeDescendantId","searchValue","onSearch","onSearchSplit","tokenSeparators","allowClear","showArrow","inputIcon","clearIcon","OptionList","animation","transitionName","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","placement","getPopupContainer","_props$showAction","showAction","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","suffix","restProps","multiple","mergedShowSearch","undefined","domProps","forEach","propName","_React$useState","useState","_React$useState2","mobile","setMobile","useEffect","containerRef","useRef","selectorDomRef","triggerRef","selectorRef","listRef","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","useImperativeHandle","_selectorRef$current","_selectorRef$current2","focus","current","blur","scrollTo","arg","_listRef$current","mergedSearchValue","useMemo","_displayValues$","val","value","String","customizeInputElement","customizeRawInputElement","customizeRawInputRef","_useMergedState","defaultValue","_useMergedState2","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","useCallback","newOpen","nextOpen","tokenWithEnter","some","tokenSeparator","includes","onInternalSearch","searchText","fromTyping","isCompositing","ret","newSearchText","patchLabels","source","onInternalSearchSubmit","trim","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","preventDefault","BACKSPACE","length","cloneDisplayValues","removedDisplayValue","i","splice","type","values","_len","arguments","rest","Array","_key","_listRef$current2","apply","concat","onInternalKeyUp","_len2","_key2","_listRef$current3","onSelectorRemove","newValues","filter","focusRef","onContainerFocus","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","onInternalMouseDown","_triggerRef$current","target","popupElement","getPopupElement","contains","setTimeout","index","indexOf","document","activeElement","_selectorRef$current3","push","_len3","restArgs","_key3","_React$useState3","_React$useState4","containerWidth","setContainerWidth","_React$useState5","_React$useState6","forceUpdate","onPopupMouseEnter","_containerRef$current","newWidth","Math","ceil","offsetWidth","Number","isNaN","onTriggerVisibleChange","_triggerRef$current2","baseSelectContext","toggleOpen","mergedShowArrow","arrowNode","createElement","customizeIcon","customizeIconProps","focused","clearNode","onClearMouseDown","optionList","mergedClassName","selectorNode","visible","empty","getTriggerDOMNode","onPopupVisibleChange","cloneElement","domRef","inputElement","onSearchSubmit","onRemove","renderNode","style","width","height","display","overflow","opacity","map","_ref","label","join","Provider","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"showArrow\", \"inputIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"suffix\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { getSeparatedContent } from './utils/valueUtil';\nimport SelectTrigger from './SelectTrigger';\nimport Selector from './Selector';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useDelayReset from './hooks/useDelayReset';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport { BaseSelectContext } from './hooks/useBaseProps';\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n}\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle, _classNames2;\n\n  var id = props.id,\n      prefixCls = props.prefixCls,\n      className = props.className,\n      showSearch = props.showSearch,\n      tagRender = props.tagRender,\n      direction = props.direction,\n      omitDomProps = props.omitDomProps,\n      displayValues = props.displayValues,\n      onDisplayValuesChange = props.onDisplayValuesChange,\n      emptyOptions = props.emptyOptions,\n      _props$notFoundConten = props.notFoundContent,\n      notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n      onClear = props.onClear,\n      mode = props.mode,\n      disabled = props.disabled,\n      loading = props.loading,\n      getInputElement = props.getInputElement,\n      getRawInputElement = props.getRawInputElement,\n      open = props.open,\n      defaultOpen = props.defaultOpen,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      activeValue = props.activeValue,\n      onActiveValueChange = props.onActiveValueChange,\n      activeDescendantId = props.activeDescendantId,\n      searchValue = props.searchValue,\n      onSearch = props.onSearch,\n      onSearchSplit = props.onSearchSplit,\n      tokenSeparators = props.tokenSeparators,\n      allowClear = props.allowClear,\n      showArrow = props.showArrow,\n      inputIcon = props.inputIcon,\n      clearIcon = props.clearIcon,\n      OptionList = props.OptionList,\n      animation = props.animation,\n      transitionName = props.transitionName,\n      dropdownStyle = props.dropdownStyle,\n      dropdownClassName = props.dropdownClassName,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      dropdownRender = props.dropdownRender,\n      dropdownAlign = props.dropdownAlign,\n      placement = props.placement,\n      getPopupContainer = props.getPopupContainer,\n      _props$showAction = props.showAction,\n      showAction = _props$showAction === void 0 ? [] : _props$showAction,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onKeyUp = props.onKeyUp,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      suffix = props.suffix,\n      restProps = _objectWithoutProperties(props, _excluded); // ============================== MISC ==============================\n\n\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n\n  var domProps = _objectSpread({}, restProps);\n\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 ? void 0 : omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  }); // ============================= Mobile =============================\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mobile = _React$useState2[0],\n      setMobile = _React$useState2[1];\n\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []); // ============================== Refs ==============================\n\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n  /** Used for component focused management */\n\n  var _useDelayReset = useDelayReset(),\n      _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n      mockFocused = _useDelayReset2[0],\n      setMockFocused = _useDelayReset2[1],\n      cancelSetMockFocused = _useDelayReset2[2]; // =========================== Imperative ===========================\n\n\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      }\n    };\n  }); // ========================== Search Value ==========================\n\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]); // ========================== Custom Input ==========================\n  // Only works in `combobox`\n\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null; // Used for customize replacement for `rc-cascader`\n\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 ? void 0 : (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref); // ============================== Open ==============================\n\n  var _useMergedState = useMergedState(undefined, {\n    defaultValue: defaultOpen,\n    value: open\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerOpen = _useMergedState2[0],\n      setInnerOpen = _useMergedState2[1];\n\n  var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n  var emptyListContent = !notFoundContent && emptyOptions;\n\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n    if (mergedOpen !== nextOpen && !disabled) {\n      setInnerOpen(nextOpen);\n      onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextOpen);\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]); // ============================= Search =============================\n\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 ? void 0 : onActiveValueChange(null); // Check if match the `tokenSeparators`\n\n    var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators); // Ignore combobox since it's not split-able\n\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 ? void 0 : onSearchSplit(patchLabels); // Should close when paste finish\n\n      onToggleOpen(false); // Tell Selector that break next actions\n\n      ret = false;\n    }\n\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n\n    return ret;\n  }; // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  }; // Close will clean up single mode search text\n\n\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]); // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    }\n\n    if (disabled) {\n      setMockFocused(false);\n    }\n  }, [disabled]); // ============================ Keyboard ============================\n\n  /**\n   * We record input value here to check if can press to clean up by backspace\n   * - null: Key is not down, this is reset by key up\n   * - true: Search text is empty when first time backspace down\n   * - false: Search text is not empty when first time backspace down\n   */\n\n  var _useLock = useLock(),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getClearLock = _useLock2[0],\n      setClearLock = _useLock2[1]; // KeyDown\n\n\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var which = event.which;\n\n    if (which === KeyCode.ENTER) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      } // We only manage open state here, close logic should handle by list component\n\n\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n\n    setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n    if (which === KeyCode.BACKSPACE && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n\n      var removedDisplayValue = null;\n\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    if (mergedOpen && listRef.current) {\n      var _listRef$current2;\n\n      (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown.apply(void 0, [event].concat(rest));\n  }; // KeyUp\n\n\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n\n    if (mergedOpen && listRef.current) {\n      var _listRef$current3;\n\n      (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n\n    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp.apply(void 0, [event].concat(rest));\n  }; // ============================ Selector ============================\n\n\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  }; // ========================== Focus / Blur ==========================\n\n  /** Record real focus status */\n\n\n  var focusRef = React.useRef(false);\n\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      } // `showAction` should handle `focus` if set\n\n\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n\n    focusRef.current = true;\n  };\n\n  var onContainerBlur = function onContainerBlur() {\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      onToggleOpen(false);\n    });\n\n    if (disabled) {\n      return;\n    }\n\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  }; // Give focus back of Select\n\n\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n\n        cancelSetMockFocused();\n\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 ? void 0 : _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n\n    onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown.apply(void 0, [event].concat(restArgs));\n  }; // ============================ Dropdown ============================\n\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      containerWidth = _React$useState4[0],\n      setContainerWidth = _React$useState4[1];\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      forceUpdate = _React$useState6[1]; // We need force update here since popup dom is render async\n\n\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  }\n\n  useLayoutEffect(function () {\n    if (triggerOpen) {\n      var _containerRef$current;\n\n      var newWidth = Math.ceil((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.offsetWidth);\n\n      if (containerWidth !== newWidth && !Number.isNaN(newWidth)) {\n        setContainerWidth(newWidth);\n      }\n    }\n  }, [triggerOpen]); // Used for raw custom input trigger\n\n  var onTriggerVisibleChange;\n\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  } // Close when click on non-select element\n\n\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen); // ============================ Context =============================\n\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]); // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n  // ============================= Arrow ==============================\n\n  var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !multiple && mode !== 'combobox';\n  var arrowNode;\n\n  if (mergedShowArrow) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: inputIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  } // ============================= Clear ==============================\n\n\n  var clearNode;\n\n  var onClearMouseDown = function onClearMouseDown() {\n    onClear === null || onClear === void 0 ? void 0 : onClear();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n\n  if (!disabled && allowClear && (displayValues.length || mergedSearchValue)) {\n    clearNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: \"\".concat(prefixCls, \"-clear\"),\n      onMouseDown: onClearMouseDown,\n      customizeIcon: clearIcon\n    }, \"\\xD7\");\n  } // =========================== OptionList ===========================\n\n\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  }); // ============================= Select =============================\n\n  var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-has-suffix\"), suffix), _classNames2)); // >>> Selector\n\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    containerWidth: containerWidth,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode() {\n      return selectorDomRef.current;\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  }) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    showSearch: mergedShowSearch,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter\n  }))); // >>> Render\n\n  var renderNode; // Render raw\n\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(displayValues.map(function (_ref) {\n      var label = _ref.label,\n          value = _ref.value;\n      return ['number', 'string'].includes(_typeof(label)) ? label : value;\n    }).join(', '))), selectorNode, arrowNode, clearNode, suffix && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-suffix\")\n    }, suffix));\n  }\n\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n}); // Set display name for dev\n\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\n\nexport default BaseSelect;"]},"metadata":{},"sourceType":"module"}